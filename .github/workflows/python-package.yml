name: Python package

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/dev-requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=222 --statistics

      - name: Run tests with coverage
        run: |
          pip install pytest-cov
          pytest --cov=datasafari --cov-report=xml

      - name: Build and check the package
        run: |
          python setup.py sdist bdist_wheel
          twine check dist/*

      - name: Build documentation
        run: |
          cd docs
          make html

      - name: Static security scan with Bandit
        run: |
          pip install bandit
          bandit -r .

      - name: Scan for dependency vulnerabilities with Safety CLI 3
        uses: pyupio/safety-3-beta/safety-3@main
        with:
          api-key: ${{ secrets.SAFETY_CLI_API_KEY }}

      - name: Environment information
        run: |
          python --version
          pip freeze
